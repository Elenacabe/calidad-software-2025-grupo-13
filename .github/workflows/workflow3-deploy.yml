name: Workflow 3- Deploy

on:
  workflow_dispatch:

  push:
    paths:
      - src/**
      - pom.xml
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Extract version from pom.xml
        id: version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"

      - name: Run tests
        run: mvn test

      - name: Generate Docker image
        run: docker build -t ${DOCKER_USER}/nitflex:${VERSION}
      - name: Login to DockerHub
        run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_TOKEN }}" 
      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_NAME }}/posts:latest
        

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Delete existing container (if exists)
        run: |
          az container delete \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name nitflexproduction \
            --yes || true

      - name: Deploy new container
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name nitflexproduction \
            --image ${{ secrets.DOCKER_USERNAME }}/nitflex:${{ needs.build.outputs.version }} \
            --registry-login-server index.docker.io \
            --registry-username ${{ secrets.DOCKER_USERNAME }} \
            --registry-password ${{ secrets.DOCKER_TOKEN }} \
            --dns-name-label nitflexproduction-${{ secrets.DOCKER_USERNAME }} \
            --ports 8080 \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5 \
            --restart-policy OnFailure

      - name: Wait for container to start
        run: sleep 30

      - name: Run smoke test
        run: |
          URL=https://nitflexproduction-${{ secrets.DOCKER_USERNAME }}.westeurope.azurecontainer.io:8080/
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" $URL)
          if [ "$STATUS" -ne 200 ]; then
            echo "FAIL"
            exit 1
          fi
          echo "SMOKE PASS"
