config:
  target: "http://localhost:8080" 
  payload:
    path: "films.csv"
    fields:
      - "title"
      - "synopsis"
      - "releaseYear"
      - "ageRating"
  http:
    pool: 8 # Limit to 8 simultaneous connections

environments:
  local:
    phases:
      - duration: 40
        arrivalRate: 5
    ensure:
      p99: 100 
      maxErrorRate: 0 # No errors allowed
    variables:
      environment: "local"
  
  staging:
    phases:
      - name: "Warm up"
        duration: 40
        arrivalRate: 10
        rampTo: 50
      - duration: 30
        arrivalRate: 0 # Pause between phases
      - name: "Load test"
        duration: 300
        arrivalRate: 50
    ensure:
      p95: 300 
      maxErrorRate: 0 
    variables:
      environment: "staging"

scenarios:
  - name: "Retrieve all films and get details of the first one"
    weight: 70
    flow:
      - get:
          url: "/api/films/"
          capture:
            - json: "$[0].id"
              as: "first_film_id"
      - get:
          url: "/api/films/{{ first_film_id }}"

  - name: "Create a film and retrieve it"
    weight: 20
    flow:
      - post:
          url: "/api/films/"
          json:
            title: "{{ title }}"
            synopsis: "{{ synopsis }}"
            releaseYear: "{{ releaseYear }}"
            ageRating: "{{ ageRating }}"
          capture:
            - json: "$.id"
              as: "created_film_id"
      - get:
          url: "/api/films/{{ created_film_id }}"

  - name: "Create, retrieve, and delete a film"
    weight: 10
    flow:
      - post:
          url: "/api/films/"
          json:
            title: "{{ title }} - To Delete"
            synopsis: "{{ synopsis }}"
            releaseYear: "{{ releaseYear }}"
            ageRating: "{{ ageRating }}"
          capture:
            - json: "$.id"
              as: "film_to_delete_id"
      - get:
          url: "/api/films/{{ film_to_delete_id }}"
      - delete:
          url: "/api/films/{{ film_to_delete_id }}"
      - get:
          url: "/api/films/"
          expect:
            - notHasProperty: "$[*].id"
              value: "{{ film_to_delete_id }}"