config:
  target: "http://localhost:8080/api" # Base URL for the API
  payload:
    path: "films.csv" # CSV file with film data
    fields:
      - "title"
      - "synopsis"
      - "releaseYear"
      - "ageRating"
  http:
    pool: 8 # Limit to 8 simultaneous connections
  ensure:
    maxResponseTime: 100 # Local: 100ms
    maxErrors: 0 # No errors allowed

environments:
  local:
    phases:
      - duration: 40
        arrivalRate: 5
  staging:
    phases:
      - name: "Warm up"
        duration: 40
        arrivalRate: 10
        rampTo: 50
      - pause: 30
      - name: "Load test"
        duration: 300
        arrivalRate: 50

scenarios:
  - name: "Retrieve all films and get details of the first one"
    weight: 70
    flow:
      - get:
          url: "/films"
          capture:
            - json: "$[0].id"
              as: "first_film_id"
      - get:
          url: "/films/{{ first_film_id }}"

  - name: "Create a film and retrieve it"
    weight: 20
    flow:
      - post:
          url: "/films"
          json:
            title: "{{ title }}"
            synopsis: "{{ synopsis }}"
            releaseYear: "{{ releaseYear }}"
            ageRating: "{{ ageRating }}"
          capture:
            - json: "$.id"
              as: "created_film_id"
      - get:
          url: "/films/{{ created_film_id }}"

  - name: "Create, retrieve, and delete a film"
    weight: 10
    flow:
      - post:
          url: "/films"
          json:
            title: "{{ title }} - To Delete"
            synopsis: "{{ synopsis }}"
            releaseYear: "{{ releaseYear }}"
            ageRating: "{{ ageRating }}"
          capture:
            - json: "$.id"
              as: "film_to_delete_id"
      - get:
          url: "/films/{{ film_to_delete_id }}"
      - delete:
          url: "/films/{{ film_to_delete_id }}"
      - get:
          url: "/films"
          expect:
            - notHasProperty: "$[*].id"
              value: "{{ film_to_delete_id }}"